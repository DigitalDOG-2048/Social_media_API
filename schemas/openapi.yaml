openapi: 3.0.0
info:
  version: 1.0.0
  title: Social API
  description: A social API.
  contact:
    name: Longhui Huang
    email: huangl43@coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://activeprize-cameraphantom-3000.codio-box.uk/api/v1/'
    description: Development server
tags:
  - name: Users
    description: API endpoint for user management.
  - name: Posts
    description: API endpoint for post management.
  - name: Comments
    description: API endpoint for comment management.
  - name: Likes
    description: API endpoint for like management.
  - name: Location
    description: API endpoint for location management.
  - name: News
    description: API endpoint for news management.
paths:
  /user/get:
    summary: Get all user info
    description: >
      This rescource represent all user in the system.
      Each user is identified by a numeric 'id'.
    get:
      tags:
        - Users
      description:
        Get list of users.
      responses:
        '200':
          description: list of users
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/user
        '401':
          description: Unauthorised request
        '500':
          description: Unable to get all users

  /user/register:
    summary: For user to register an account
    description: >
      For user to register an account.
    post:
      tags:
        - Users
      description:
        Register an account
      requestBody:
        description: All info need for register
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/register
      responses:
        '200':
          description: account created
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/registered
        '500':
          description: the username is already exist.
  
  /user/login:
    summary: for user to login
    description: >
      Data needed for login.
    post:
      tags:
        - Users
      description:
        Login to the account
      requestBody:
        description: Data required for login(username and password)
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/login
      responses:
        '200':
          description: success logged in
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/loggedin
        '400':
          description: Incorrect password or username
        '500':
          description: Something went wrong

  /user/logout:
    summary: for user to logout
    description: >
      Logout user
    post:
      tags:
        - Users
      description:
        Logout user
      responses:
        '200':
          description: success logout
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/logout

  /user/update/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: interger
        required: true
        description: numeric id of the user
    put:
      tags:
        - Users
      description:
        update user
      requestBody:
        description: information want to update.
        required: false
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/userUpdate
      responses:
        '200':
          description: success updated
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userUpdated
        '500':
          description: something went wrong

  /user/delete:
    summary: to delete a account
    description: >
      delete a account
    delete:
      tags:
        - Users
      description:
        delete a account
      responses:
        '200':
          description: success deleted
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userDeleted
        '500':
          description: something went wrong

  /post/get:
    summary: Get all posts
    description: >
      Get all posts
    get:
      tags:
        - Posts
      description:
        Get all posts
      responses:
        '200':
          description: Get all posts
          content:
            application/json:
              schema:
                $ref: ./post.json#/definitions/post
        '500':
          description: something went wrong

  /post/add/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: interger
        required: true
        description: the id of the user
    post:
      tags:
        - Posts
      description:
        Add post
      requestBody:
        description: the text of the post
        required: true
        content:
          application/json:
            schema:
              $ref: ./post.json#/definitions/addPost
      responses:
        '200':
          description: success added
          content:
            application/json:
              schema:
                $ref: ./post.json#/definitions/addedPost
        '500':
          description: unable to add post

  /post/update/{id}:
      parameters:
        - in: path
          name: id
          schema:
            type: interger
          required: true
          description: the id of the post
      put:
        tags:
          - Posts
        description:
          Update post
        requestBody:
          description: the text of the post
          required: true
          content:
            application/json:
              schema:
                $ref: ./post.json#/definitions/updatePost
        responses:
          '200':
            description: success added
            content:
              application/json:
                schema:
                  $ref: ./post.json#/definitions/updatedPost
          '500':
            description: unable to update the post

  /post/del/{id}:
      parameters:
        - in: path
          name: id
          schema:
            type: interger
          required: true
          description: the id of the post
      delete:
        tags:
          - Posts
        description:
          Delete post
        responses:
          '200':
            description: success deleted
            content:
              application/json:
                schema:
                  $ref: ./post.json#/definitions/deletePost
          '500':
            description: unable to delete the post

  /comment/get/{id}:
      parameters:
        - in: path
          name: id
          schema:
            type: interger
          required: true
          description: the id of the post
      get:
        tags:
          - Comments
        description:
          Get comments
        responses:
          '200':
            description: list of the comments
            content:
              application/json:
                schema:
                  $ref: ./comment.json#/definitions/comment
          "404":
            description: No comment found
          '500':
            description: Something went wrong

  /comment/{userID}/add{postID}:
      parameters:
        - in: path
          name: userID
          schema:
            type: interger
          required: true
          description: the id of the user
        - in: path
          name: postID
          schema:
            type: interget
          required: true
          description: the id of the post
      post:
        tags:
          - Comments
        description:
          Add comment
        requestBody:
          description: the text of the comment
          required: true
          content:
            application/json:
              schema:
                $ref: ./comment.json#/definitions/addComment
        responses:
          '200':
            description: list of the comments
            content:
              application/json:
                schema:
                  $ref: ./comment.json#/definitions/addedComment
          "404":
            description: Post not found
          '500':
            description: Failed to add comment

  /comment/updata/{id}:
      parameters:
        - in: path
          name: id
          schema:
            type: interger
          required: true
          description: the id of the comment

      put:
        tags:
          - Comments
        description:
          Edited comment
        requestBody:
          description: the text of the comment
          required: true
          content:
            application/json:
              schema:
                $ref: ./comment.json#/definitions/updateComment
        responses:
          '200':
            description: list of the comments
            content:
              application/json:
                schema:
                  $ref: ./comment.json#/definitions/updatedComment
          '500':
            description: can not edite the comment

  /comment/del/{id}:
      parameters:
        - in: path
          name: id
          schema:
            type: interger
          required: true
          description: the id of the comment

      delete:
        tags:
          - Comments
        description:
          Delete comment
        responses:
          '200':
            description: list of the comments
            content:
              application/json:
                schema:
                  $ref: ./comment.json#/definitions/deletedComment
          '500':
            description: comment not found or already deleted

  /like/get/{id}:
      parameters:
        - in: path
          name: id
          schema:
            type: interger
          required: true
          description: the id of the post
      get:
        tags:
          - Likes
        description:
          Get likes
        responses:
          '200':
            description: the number of likes
            content:
              application/json:
                schema:
                  $ref: ./like.json#/definitions/likes
          "404":
            description: Post not found
          '500':
            description: Something went wrong

  /like/{userID}/addlike/{postId}:
      parameters:
        - in: path
          name: userID
          schema:
            type: interger
          required: true
          description: the id of the user
        - in: path
          name: postID
          schema:
            type: interger
          required: true
          description: the id of the post
      post:
        tags:
          - Likes
        description:
          Add like
        responses:
          '200':
            description: user likes a post
            content:
              application/json:
                schema:
                  $ref: ./like.json#/definitions/addLike
          "400":
            description: Already like the post
          '500':
            description: Something went wrong

  /like/{userID}/dislike/{postId}:
      parameters:
        - in: path
          name: userID
          schema:
            type: interger
          required: true
          description: the id of the user
        - in: path
          name: postID
          schema:
            type: interger
          required: true
          description: the id of the post
      post:
        tags:
          - Likes
        description:
          Remove like
        responses:
          '200':
            description: use removed like from post
            content:
              application/json:
                schema:
                  $ref: ./like.json#/definitions/disLike
          '500':
            description: Something went wrong

  /location/{ip_address}:
      parameters:
        - in: path
          name: ip_address
          schema:
            type: interger
          required: true
          description: the ip address of your device
      get:
        tags:
          - Location
        description:
          Get location
        responses:
          '200':
            description: get location based on your ip address
            content:
              application/json:
                schema:
                  $ref: ./location.json#/definitions/location
          '500':
            description: something went wrong, please try again

  /news/live:
      get:
        tags:
          - News
        description:
          Get live News worldwide
        responses:
          '200':
            description: the live news worldwide
            content:
              application/json:
                schema:
                  $ref: ./news.json#/definitions/news
          '500':
            description: something went wrong, please try again

  /news/local/{country}:
    parameters:
      - in: path
        name: country
        schema:
          type: string
        required: true
        description: the country of news
    get:
      tags:
        - News
      description:
        Get local live news
      responses:
        '200':
          description: Get local live news
          content:
            application/json:
              schema:
                $ref: ./news.json#/definitions/news
        '500':
          description: something went wrong, please try again